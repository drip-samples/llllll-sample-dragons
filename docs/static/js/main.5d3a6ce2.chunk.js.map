{"version":3,"sources":["assets/img/fantasy_dragon_white.png","assets/img/fantasy_dragon_black.png","assets/img/fantasy_dragon_red.png","assets/img/fantasy_dragon_green.png","assets/img/fantasy_dragon_blue.png","assets/img/fantasy_dragon_yellow.png","assets/img/jewel07_ruby.png","assets/img/jewel05_emerald.png","assets/img/jewel09_sapphire.png","assets/img/jewel11_citrine.png","contexts/Web3Context/index.js","enums/Web3StatusType.js","enums/Web3TransactionType.js","enums/ContractData.js","providers/Web3Provider/index.js","providers/GithubPagesRedirectProvider/index.js","components/Loading/index.js","components/MetamaskDisableNetwork/index.js","components/MetamaskNotFound/index.js","injectors/ValidateWeb3Injector/index.js","enums/TokenType.js","models/TokenModel/index.js","components/TokenIcon/index.js","components/TokenTypeChip/index.js","views/ShareTokenDetail/index.js","views/TokenDetail/index.js","components/NewChip/index.js","components/TokenCard/index.js","views/MyPage/index.js","injectors/Web3Injector/index.js","enums/NetworkName.js","components/Header/index.js","components/NotFound/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Web3Context","React","createContext","Web3StatusType","identity","Symbol","checking","waiting","failed","notfound","network","success","Web3TransactionType","none","pending","cancel","SixPillars","require","Dragon","ContractData","abi","addresses","4","42","5777","Web3Provider","state","web3","web3Status","networkId","currentAddress","web3Transaction","mintToken","mintData","inscription","_this$state","_this","sixPillarsAddress","utils","sha3","substr","slice","sendingCallback","arguments","length","undefined","setState","_this$state2","eth","sendTransaction","from","to","data","on","transactionHash","receipt","err","_this2","this","window","addEventListener","_ref","type","Web3","ethereum","postMessage","currentProvider","prevProps","prevState","_this3","_this$state3","getAccounts","then","res","address","net","getId","Error","Object","keys","indexOf","toString","catch","console","log","react_default","a","createElement","contexts_Web3Context","Provider","value","Children","only","props","children","Component","GithubPagesRedirectProvider","pathName","sessionStorage","redirect","splitPathName","split","history","push","cloneElement","objectSpread","withRouter","Loading","CircularProgress_default","size","MetamaskDisableNetwork","MetamaskNotFound","ValidateWeb3Injector","WrappedComponent","_React$Component","_class","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","Consumer","providerProps","TokenType","whiteDragon","blackDragon","redDragon","greenDragon","blueDragon","yellowDragon","redJewel","greenJewel","blueJewel","yellowJewel","TokenModel","id","owner","creator","tokenType","fullLength","bodyWeight","power","speed","vitality","intellect","isAlreadyDisplay","isAlreadyMixed","index","max","mul","Math","floor","random","fullLengthCount","ceil","bodyWeightCount","powerCount","speedCount","vitalityCount","intellectCount","i","byteForInscription","targetKey","filter","concat","localStorage","setItem","toLowerCase","getItem","model","byte","parseInt","values","toByte","contractAddress","decodeTokenType","decodeTokenTypeOnlyJewel","isDragon","decodeForDragon","decodeForJewel","enableTokenTypes","tokenModels","submitTokenType","map","sum","add","current","m","reduce","TokenIcon","src","_this$props","tokenModel","remainProps","objectWithoutProperties","imageWhiteDragon","imageBlackDragon","imageRedDragon","imageGreenDragon","imageBlueDragon","imageYellowDragon","imageRedJewel","imageGreenJewel","imageBlueJewel","imageYellowJewel","assign","alt","TokenTypeChip","label","Chip_default","color","ShareTokenDetail","isNotFound","salesFormatter","Intl","NumberFormat","style","currency","funFormatter","actFormat","act","day","monthNum","month","dayNum","yearNum","year","name","web3HttpUrl","_this$props$match$par","match","params","tokenId","networkName","providers","HttpProvider","sixPillars","Contract","Number","isNaN","methods","ownerOf","call","result","BN","decode","BandStar","Fragment","components_TokenIcon","height","components_TokenTypeChip","alreadyDisplay","shareUrl","location","origin","marginTop","href","NewChip","red","backgroundColor","TokenCard","handleClick","onClick","_this$props2","isMixedMode","isSelected","cardStyle","width","teal","grey","Card_default","CardActionArea_default","CardContent_default","float","marginBottom","maxWidth","maxHeight","listStyle","CheckBox_default","CheckBoxOutlineBlank_default","LIST_ITEM_ONCE","MyPage","tokenBalance","isLoadingNextToken","isCanMore","selectedTokenIds","isCanSubmitMixed","updateTokenId","nextIndex","remainCount","tokenOfOwnerByIndex","bn","error","handleMintClick","mint","encode","handleTokenClick","tokenIds","dragonTokenModels","handleMoreClick","handleEditMixedClick","handleSubmitMixedClick","mixedTokenModels","mixedMint","forEach","alreadyMixed","balanceOf","balance","_this$state4","displayCount","Grid_default","container","item","xs","md","lg","Button_default","variant","Array","fill","_","components_TokenCard","padding","Web3Injector","NetworkName","Header","isProgress","isOpen","snackMessage","handleSnackClose","handleLogoClick","setTimeout","reload","AppBar_default","position","Toolbar_default","Typography_default","flexGrow","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","NotFound","App","providers_Web3Provider","BrowserRouter","basename","providers_GithubPagesRedirectProvider","components_Header","Switch","Route","exact","path","component","TokenDetail","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d3a6ce2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fantasy_dragon_white.1160315e.png\";","module.exports = __webpack_public_path__ + \"static/media/fantasy_dragon_black.e0323321.png\";","module.exports = __webpack_public_path__ + \"static/media/fantasy_dragon_red.604d1849.png\";","module.exports = __webpack_public_path__ + \"static/media/fantasy_dragon_green.4039d34b.png\";","module.exports = __webpack_public_path__ + \"static/media/fantasy_dragon_blue.e93644c0.png\";","module.exports = __webpack_public_path__ + \"static/media/fantasy_dragon_yellow.2eeeff3b.png\";","module.exports = __webpack_public_path__ + \"static/media/jewel07_ruby.ac02531d.png\";","module.exports = __webpack_public_path__ + \"static/media/jewel05_emerald.51a5e030.png\";","module.exports = __webpack_public_path__ + \"static/media/jewel09_sapphire.0b134f37.png\";","module.exports = __webpack_public_path__ + \"static/media/jewel11_citrine.49f07d40.png\";","import React from 'react'\n\nconst Web3Context = React.createContext()\n\nexport default Web3Context\n","export default {\n  identity: Symbol('identity'),\n  checking: Symbol('checking'),\n  waiting: Symbol('waiting'),\n  failed: {\n    notfound: Symbol('failed.notfound'),\n    network: Symbol('failed.network'),\n  },\n  success: Symbol('success'),\n}\n","export default {\n  none: Symbol('none'),\n  pending: Symbol('pending'),\n  success: Symbol('success'),\n  cancel: Symbol('cancel'),\n}\n","const SixPillars = require(\"../contracts/SixPillars.json\")\nconst Dragon = require(\"../contracts/Dragon.json\")\n\nexport default {\n  SixPillars: {\n    abi: SixPillars['abi'],\n    addresses: {\n      4: '0x542A900357c9638AD6e944a57072c5D01f1C1Ea7',\n      42: '0x542A900357c9638AD6e944a57072c5D01f1C1Ea7',\n      5777: SixPillars['networks']['5777']['address'],\n    },\n  },\n  Dragon: {\n    abi: Dragon['abi'],\n    addresses: {\n      4: '0x26addb72ab35fad08a895cfe717c5ff312a0f699',\n      42: '0xcdc2f9e5b782e421f6188736bd294ee5c716db2f',\n      5777: Dragon['networks']['5777']['address'],\n    },\n  },\n}\n","import React from 'react'\nimport Web3 from 'web3'\nimport Web3Context from '../../contexts/Web3Context'\nimport Web3StatusType from '../../enums/Web3StatusType'\nimport Web3TransactionType from '../../enums/Web3TransactionType'\nimport ContractData from '../../enums/ContractData'\n\nclass Web3Provider extends React.Component {\n  state = {\n    web3: null,\n    web3Status: Web3StatusType.identity,\n    networkId: null,\n    currentAddress: null,\n    web3Transaction: Web3TransactionType.none,\n    mintToken: null,\n  }\n\n  mintData = (inscription) => {\n    const { web3, networkId } = this.state\n    const sixPillarsAddress = ContractData.SixPillars.addresses[networkId]\n    const methodHead = web3.utils.sha3(\"mint(uint256,address)\").substr(0, 10)\n    const _inscription = inscription.slice(-64)\n    const _sixPillarsAddress = ('0000000000000000000000000000000000000000000000000000000000000000' + sixPillarsAddress.substr(2, 40)).slice(-64)\n    const data = methodHead + _inscription + _sixPillarsAddress\n    return data\n  }\n\n  mintToken = (inscription, sendingCallback = null) => {\n    this.setState({web3Transaction: Web3TransactionType.none})\n    const {web3, networkId, currentAddress} = this.state\n    web3.eth.sendTransaction({\n      from: currentAddress,\n      to: ContractData.Dragon.addresses[networkId],\n      data: this.mintData(inscription),\n    })\n      .on('transactionHash', (transactionHash) => {\n        this.setState({web3Transaction: Web3TransactionType.pending})\n        sendingCallback && sendingCallback()\n      })\n      .on('receipt', (receipt) => {\n        this.setState({web3Transaction: Web3TransactionType.success})\n      })\n      .on('error', (err) => {\n        this.setState({web3Transaction: Web3TransactionType.cancel})\n      })\n  }\n\n  componentDidMount() {\n    if (typeof window.web3 === 'undefined') {\n      window.addEventListener('message', ({ data }) => {\n        if (data && data.type && data.type === 'ETHEREUM_PROVIDER_SUCCESS') {\n          const web3 = new Web3(window.ethereum)\n          this.setState({\n            web3,\n            web3Status: web3 ? Web3StatusType.checking : Web3StatusType.failed.notfound,\n          })\n        }\n      })\n      window.postMessage({ type: 'ETHEREUM_PROVIDER_REQUEST' }, '*')\n\n    } else {\n      const web3 = new Web3(window.web3.currentProvider)\n      this.setState({\n        web3,\n        web3Status: web3 ? Web3StatusType.checking : Web3StatusType.failed.notfound,\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { web3, web3Status } = this.state\n    const mintToken = this.mintToken\n    switch (web3Status) {\n      case Web3StatusType.checking:\n        this.setState({\n          web3Status: Web3StatusType.waiting,\n        })\n        web3.eth.getAccounts()\n          .then((res) => {\n            const address = res && 0 < res.length && res[0]\n            if (address) {\n              this.setState({\n                currentAddress: address,\n              })\n              return web3.eth.net.getId()\n\n            } else {\n              this.setState({\n                web3Status: Web3StatusType.failed.notfound,\n              })\n              throw new Error()\n            }\n          })\n          .then((res) => {\n            if (0 <= Object.keys(ContractData.SixPillars.addresses).indexOf(res.toString())) {\n              this.setState({\n                web3Status: Web3StatusType.success,\n                networkId: res,\n                mintToken,\n              })\n\n            } else {\n              this.setState({\n                web3Status: Web3StatusType.failed.network,\n              })\n            }\n          })\n          .catch((err) => {\n            console.log(err)\n          })\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n    return (\n      <Web3Context.Provider value={this.state} >\n        { React.Children.only(this.props.children) }\n      </Web3Context.Provider>\n    )\n  }\n}\n\nexport default Web3Provider\n","import React from 'react'\nimport { withRouter } from 'react-router'\n\nclass GithubPagesRedirectProvider extends React.Component {\n  componentDidMount() {\n    const pathName = window.sessionStorage.redirect\n    const splitPathName = pathName ? pathName.split('/llllll-sample-dragons') : []\n    window.sessionStorage.redirect = null\n    if (1 < splitPathName.length) {\n      this.props.history.push(splitPathName[1])\n    }\n  }\n\n  render() {\n    return React.cloneElement(React.Children.only(this.props.children), {...this.props})\n  }\n}\n\nexport default withRouter(GithubPagesRedirectProvider)\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nexport default () => (\n  <div>\n    Loading...\n    <CircularProgress size={20} />\n  </div>\n)\n","import React from 'react'\n\nexport default () => (\n  <div>\n    <div>Metamask is connected disable network.</div>\n    <div>enabled is</div>\n    <ul>\n      <li>Rinkeby</li>\n      <li>Kovan</li>\n    </ul>\n  </div>\n)\n","import React from 'react'\n\nexport default () => (\n  <div>\n    Metamask Not Found\n  </div>\n)\n","import React from 'react'\nimport Web3Context from '../../contexts/Web3Context'\nimport Web3StatusType from '../../enums/Web3StatusType'\nimport Loading from '../../components/Loading'\nimport MetamaskDisableNetwork from '../../components/MetamaskDisableNetwork'\nimport MetamaskNotFound from '../../components/MetamaskNotFound'\n\nconst ValidateWeb3Injector = (WrappedComponent) => (\n  class extends React.Component {\n    render() {\n      return (\n        <Web3Context.Consumer>\n          {\n            (providerProps) => {\n              switch (providerProps.web3Status) {\n                case Web3StatusType.failed.notfound:\n                  return <MetamaskNotFound />\n                case Web3StatusType.failed.network:\n                  return <MetamaskDisableNetwork />\n                case Web3StatusType.success:\n                  const props = {\n                    ...this.props,\n                    ...providerProps,\n                  }\n                  return <WrappedComponent {...props} />\n                default:\n                  return <Loading />\n              }\n            }\n          }\n        </Web3Context.Consumer>\n      )\n    }\n  }\n)\n\nexport default ValidateWeb3Injector\n","export default {\n  whiteDragon: Symbol('whiteDragon'),\n  blackDragon: Symbol('blackDragon'),\n  redDragon: Symbol('redDragon'),\n  greenDragon: Symbol('greenDragon'),\n  blueDragon: Symbol('blueDragon'),\n  yellowDragon: Symbol('yellowDragon'),\n  redJewel: Symbol('redJewel'),\n  greenJewel: Symbol('greenJewel'),\n  blueJewel: Symbol('blueJewel'),\n  yellowJewel: Symbol('yellowJewel'),\n}\n","import TokenType from '../../enums/TokenType'\n\nconst IS_ALREADY_DISPLAY_KEY = 'IS_ALREADY_DISPLAY_KEY_'\nconst IS_ALREADY_MIXED_KEY = 'IS_ALREADY_MIXED_KEY_'\nconst TRUE_VALUE = 'true'\n\nclass TokenModel {\n  constructor() {\n    this.id = null\n    this.owner = null\n    this.creator = null\n    this.inscription = null\n    this.tokenType = null\n    this.fullLength = 0\n    this.bodyWeight = 0\n    this.power = 0\n    this.speed = 0\n    this.vitality = 0\n    this.intellect = 0\n    this.isAlreadyDisplay = false\n    this.isAlreadyMixed = false\n  }\n\n  static isAlreadyMixed(id) {\n    return window.localStorage.getItem(IS_ALREADY_MIXED_KEY + `0x${id.slice(-64)}`.toLowerCase()) === TRUE_VALUE\n  }\n\n  static decodeTokenType(model, inscription) {\n    const i = 11\n    const byte = inscription.substr(-((i + 1) * 2), 2)\n    const keys = Object.keys(TokenType)\n    model.tokenType = TokenType[keys[parseInt(byte, 16) % keys.length] ]\n  }\n\n  static decodeTokenTypeOnlyJewel(model, inscription) {\n    const i = 11\n    const byte = inscription.substr(-((i + 1) * 2), 2)\n    const values = [\n      TokenType.redJewel,\n      TokenType.greenJewel,\n      TokenType.blueJewel,\n      TokenType.yellowJewel,\n    ]\n    model.tokenType = values[parseInt(byte, 16) % values.length]\n  }\n\n  static decodeForDragon(model, inscription) {\n    const toByte = (inscription, i) => { return parseInt(inscription.substr(-((i + 1) * 2), 2), 16) }\n    let fullLengthCount = (toByte(inscription, 10) % 2) + 1\n    let bodyWeightCount = (toByte(inscription, 29) % 2) + 1\n    let powerCount = (toByte(inscription, 12) % 4) + 1\n    let speedCount = (toByte(inscription, 23) % 4) + 1\n    let vitalityCount = (toByte(inscription, 22) % 4) + 1\n    let intellectCount = (toByte(inscription, 30) % 4) + 1\n\n    for (let i = 0; i < 32; i++) {\n      const byte = toByte(inscription, i)\n      switch (i) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n          if ((i - 1) < intellectCount) {\n            model.intellect += (byte * (1 << ((i - 1) * 8)))\n          }\n          break\n        case 5:\n        case 6:\n          if ((i - 5) < fullLengthCount) {\n            model.fullLength += (byte * (1 << ((i - 5) * 8)))\n          }\n          break\n        case 8:\n        case 9:\n          if ((i - 8) < bodyWeightCount) {\n            model.bodyWeight += (byte * (1 << ((i - 8) * 8)))\n          }\n          break\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n          if ((i - 13) < speedCount) {\n            model.speed += (byte * (1 << ((i - 13) * 8)))\n          }\n          break\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n          if ((i - 17) < vitalityCount) {\n            model.vitality += (byte * (1 << ((i - 17) * 8)))\n          }\n          break\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n          if ((i - 25) < powerCount) {\n            model.power += (byte * (1 << ((i - 25) * 8)))\n          }\n          break\n        default:\n          break\n      }\n    }\n  }\n\n  static decodeForJewel(model, inscription) {\n    const toByte = (inscription, i) => { return parseInt(inscription.substr(-((i + 1) * 2), 2), 16) }\n    model.power = toByte(inscription, 25) * ((toByte(inscription, 26) % 8) + 3)\n    model.speed = toByte(inscription, 13) * ((toByte(inscription, 14) % 8) + 3)\n    model.vitality = toByte(inscription, 17) * ((toByte(inscription, 18) % 8) + 3)\n    model.intellect = toByte(inscription, 1) * ((toByte(inscription, 2) % 8) + 3)\n  }\n\n  static decode(id, owner, creator, inscription, contractAddress) {\n    // validate\n    if ((id === null)\n      || (id.length === 0)\n      || (owner === null)\n      || (owner.length === 0)\n      || (creator === null)\n      || (creator.length === 0)\n      || (inscription === null)\n      || (inscription.length === 0))\n    {\n      return null\n    }\n\n    const model = new TokenModel()\n    model.id = `0x${id.slice(-64)}`\n    model.owner = owner\n    model.creator = creator\n    model.inscription = `0x${inscription.slice(-64)}`\n\n    if (creator.toLowerCase() === contractAddress.toLowerCase()) {\n      this.decodeTokenType(model, inscription)\n\n    } else {\n      this.decodeTokenTypeOnlyJewel(model, inscription)\n    }\n\n\n    if (model.isDragon()) {\n      this.decodeForDragon(model, inscription)\n\n    } else {\n      this.decodeForJewel(model, inscription)\n    }\n\n    model.isAlreadyMixed = (window.localStorage.getItem(IS_ALREADY_MIXED_KEY + model.id.toLowerCase()) === TRUE_VALUE)\n    model.isAlreadyDisplay = (window.localStorage.getItem(IS_ALREADY_DISPLAY_KEY + model.id.toLowerCase()) === TRUE_VALUE)\n\n    return model\n  }\n\n  static mint() {\n    const model = new TokenModel()\n\n    const enableTokenTypes = [\n      TokenType.whiteDragon,\n      TokenType.blackDragon,\n    ]\n    model.tokenType = enableTokenTypes[Math.floor(Math.random() * enableTokenTypes.length)]\n\n    model.fullLength = Math.floor(Math.random() * 0xfe) + 1\n    model.bodyWeight = Math.floor(Math.random() * 0xfe) + 1\n    model.power = Math.floor(Math.random() * 0xfe) + 1\n    model.speed = Math.floor(Math.random() * 0xfe) + 1\n    model.vitality = Math.floor(Math.random() * 0xfe) + 1\n    model.intellect = Math.floor(Math.random() * 0xfe) + 1\n\n    return model\n  }\n\n  static mixedMint(tokenModels) {\n    const model = new TokenModel()\n\n    let submitTokenType = tokenModels.map((model) => {\n      switch (model.tokenType) {\n        case TokenType.redJewel:\n          return TokenType.redDragon\n        case TokenType.greenJewel:\n          return TokenType.greenDragon\n        case TokenType.blueJewel:\n          return TokenType.blueDragon\n        case TokenType.yellowJewel:\n          return TokenType.yellowDragon\n        default:\n          return model.tokenType\n      }\n    })\n\n    model.tokenType = submitTokenType[Math.floor(Math.random() * submitTokenType.length)]\n\n    const sum = (add, current) => { return current + add }\n    model.fullLength = tokenModels.filter((m) => m.isDragon()).map((m) => m.fullLength).reduce(sum)\n    model.fullLength = (model.fullLength < 0xffff) ? model.fullLength : 0xffff\n    model.bodyWeight = tokenModels.filter((m) => m.isDragon()).map((m) => m.bodyWeight).reduce(sum)\n    model.bodyWeight = (model.bodyWeight < 0xffff) ? model.bodyWeight : 0xffff\n    model.power = tokenModels.filter((m) => m.isDragon() || m.tokenType === TokenType.redJewel).map((m) => m.power).reduce(sum)\n    model.power = (model.power < 0xffffffff) ? model.power : 0xffffffff\n    model.speed = tokenModels.filter((m) => m.isDragon() || m.tokenType === TokenType.blueJewel).map((m) => m.speed).reduce(sum)\n    model.speed = (model.speed < 0xffffffff) ? model.speed : 0xffffffff\n    model.vitality = tokenModels.filter((m) => m.isDragon() || m.tokenType === TokenType.greenJewel).map((m) => m.vitality).reduce(sum)\n    model.vitality = (model.vitality < 0xffffffff) ? model.vitality : 0xffffffff\n    model.intellect = tokenModels.filter((m) => m.isDragon() || m.tokenType === TokenType.yellowJewel).map((m) => m.intellect).reduce(sum)\n    model.intellect = (model.intellect < 0xffffffff) ? model.intellect : 0xffffffff\n\n    return model\n  }\n\n  byteForInscription(index, max) {\n    const mul = Math.floor(0xff / max)\n    return (Math.floor(Math.random() * mul) * max) + index\n  }\n\n  encode() {\n    let fullLengthCount = Math.ceil(this.fullLength.toString(16).length / 2)\n    let bodyWeightCount = Math.ceil(this.bodyWeight.toString(16).length / 2)\n    let powerCount = Math.ceil(this.power.toString(16).length / 2)\n    let speedCount = Math.ceil(this.speed.toString(16).length / 2)\n    let vitalityCount = Math.ceil(this.vitality.toString(16).length / 2)\n    let intellectCount = Math.ceil(this.intellect.toString(16).length / 2)\n\n    let inscription = \"\"\n    for (let i = 0; i < 32; i++) {\n      switch (i) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n          if ((i - 1) < intellectCount) {\n            inscription = (\"00000000\" + this.intellect.toString(16)).substr(-((i - 1 + 1) * 2), 2) + inscription\n          } else {\n            inscription = (\"00\" + Math.floor(Math.random() * 0xff).toString(16)).slice(-2) + inscription\n          }\n          break\n        case 5:\n        case 6:\n          if ((i - 5) < fullLengthCount) {\n            inscription = (\"00000000\" + this.fullLength.toString(16)).substr(-((i - 5 + 1) * 2), 2) + inscription\n          } else {\n            inscription = (\"00\" + Math.floor(Math.random() * 0xff).toString(16)).slice(-2) + inscription\n          }\n          break\n        case 8:\n        case 9:\n          if ((i - 8) < bodyWeightCount) {\n            inscription = (\"00000000\" + this.bodyWeight.toString(16)).substr(-((i - 8 + 1) * 2), 2) + inscription\n          } else {\n            inscription = (\"00\" + Math.floor(Math.random() * 0xff).toString(16)).slice(-2) + inscription\n          }\n          break\n        case 10:\n          inscription = (\"00\" + this.byteForInscription(fullLengthCount - 1, 2).toString(16)).slice(-2) + inscription\n          break\n        case 11:\n        {\n          const keys = Object.keys(TokenType)\n          const targetKey = keys.filter((key) => { return TokenType[key] === this.tokenType })[0]\n          inscription = (\"00\" + this.byteForInscription(keys.indexOf(targetKey), keys.length).toString(16)).slice(-2) + inscription\n        }\n          break\n        case 12:\n          inscription = (\"00\" + this.byteForInscription(powerCount - 1, 4).toString(16)).slice(-2) + inscription\n          break\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n          if ((i - 13) < speedCount) {\n            inscription = (\"00000000\" + this.speed.toString(16)).substr(-((i - 13 + 1) * 2), 2) + inscription\n          } else {\n            inscription = (\"00\" + Math.floor(Math.random() * 0xff).toString(16)).slice(-2) + inscription\n          }\n          break\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n          if ((i - 17) < vitalityCount) {\n            inscription = (\"00000000\" + this.vitality.toString(16)).substr(-((i - 17 + 1) * 2), 2) + inscription\n          } else {\n            inscription = (\"00\" + Math.floor(Math.random() * 0xff).toString(16)).slice(-2) + inscription\n          }\n          break\n        case 22:\n          inscription = (\"00\" + this.byteForInscription(vitalityCount - 1, 4).toString(16)).slice(-2) + inscription\n          break\n        case 23:\n          inscription = (\"00\" + this.byteForInscription(speedCount - 1, 4).toString(16)).slice(-2) + inscription\n          break\n        case 25:\n        case 26:\n        case 27:\n        case 28:\n          if ((i - 25) < powerCount) {\n            inscription = (\"00000000\" + this.power.toString(16)).substr(-((i - 25 + 1) * 2), 2) + inscription\n          } else {\n            inscription = (\"00\" + Math.floor(Math.random() * 0xff).toString(16)).slice(-2) + inscription\n          }\n          break\n        case 29:\n          inscription = (\"00\" + this.byteForInscription(bodyWeightCount - 1, 2).toString(16)).slice(-2) + inscription\n          break\n        case 30:\n          inscription = (\"00\" + this.byteForInscription(intellectCount - 1, 4).toString(16)).slice(-2) + inscription\n          break\n        default:\n          inscription = (\"00\" + Math.floor(Math.random() * 0xff).toString(16)).slice(-2) + inscription\n          break\n      }\n    }\n    return `0x${inscription}`\n  }\n\n  alreadyDisplay() {\n    this.isAlreadyDisplay = true\n    window.localStorage.setItem(IS_ALREADY_DISPLAY_KEY + this.id.toLowerCase(), TRUE_VALUE)\n  }\n\n  alreadyMixed() {\n    this.isAlreadyMixed = true\n    window.localStorage.setItem(IS_ALREADY_MIXED_KEY + this.id.toLowerCase(), TRUE_VALUE)\n  }\n\n  isDragon() {\n    switch (this.tokenType) {\n      case TokenType.whiteDragon:\n      case TokenType.blackDragon:\n      case TokenType.redDragon:\n      case TokenType.greenDragon:\n      case TokenType.blueDragon:\n      case TokenType.yellowDragon:\n        return true\n      default:\n        return false\n    }\n  }\n}\n\nexport default TokenModel\n","import React from 'react'\nimport TokenType from '../../enums/TokenType'\nimport imageWhiteDragon from '../../assets/img/fantasy_dragon_white.png'\nimport imageBlackDragon from '../../assets/img/fantasy_dragon_black.png'\nimport imageRedDragon from '../../assets/img/fantasy_dragon_red.png'\nimport imageGreenDragon from '../../assets/img/fantasy_dragon_green.png'\nimport imageBlueDragon from '../../assets/img/fantasy_dragon_blue.png'\nimport imageYellowDragon from '../../assets/img/fantasy_dragon_yellow.png'\nimport imageRedJewel from '../../assets/img/jewel07_ruby.png'\nimport imageGreenJewel from '../../assets/img/jewel05_emerald.png'\nimport imageBlueJewel from '../../assets/img/jewel09_sapphire.png'\nimport imageYellowJewel from '../../assets/img/jewel11_citrine.png'\n\nclass TokenIcon extends React.Component {\n  render() {\n    const {tokenModel, ...remainProps} = this.props\n    let src\n    switch (tokenModel.tokenType) {\n      case TokenType.whiteDragon:\n        src = imageWhiteDragon\n        break\n      case TokenType.blackDragon:\n        src = imageBlackDragon\n        break\n      case TokenType.redDragon:\n        src = imageRedDragon\n        break\n      case TokenType.greenDragon:\n        src = imageGreenDragon\n        break\n      case TokenType.blueDragon:\n        src = imageBlueDragon\n        break\n      case TokenType.yellowDragon:\n        src = imageYellowDragon\n        break\n      case TokenType.redJewel:\n        src = imageRedJewel\n        break\n      case TokenType.greenJewel:\n        src = imageGreenJewel\n        break\n      case TokenType.blueJewel:\n        src = imageBlueJewel\n        break\n      case TokenType.yellowJewel:\n        src = imageYellowJewel\n        break\n      default:\n        return null\n    }\n    return <img src={src} alt={tokenModel.id} {...remainProps} />\n  }\n}\n\nexport default TokenIcon\n","import React from 'react'\nimport Chip from '@material-ui/core/Chip'\n\nclass TokenTypeChip extends React.Component {\n  render() {\n    const {tokenModel, ...remainProps} = this.props\n    let label = tokenModel.isDragon() ? 'Dragon' : 'Jewel'\n    return <Chip label={label} color='secondary' {...remainProps} />\n  }\n}\n\nexport default TokenTypeChip\n","import React from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport ValidateWeb3Injector from '../../injectors/ValidateWeb3Injector'\nimport TokenType from '../../enums/TokenType'\nimport TokenModel from '../../models/TokenModel'\nimport TokenIcon from '../../components/TokenIcon'\nimport TokenTypeChip from '../../components/TokenTypeChip'\nimport Loading from '../../components/Loading'\nimport ContractData from '../../enums/ContractData'\n\nclass ShareTokenDetail extends React.Component {\n  state = {\n    tokenModel: null,\n    isNotFound: false,\n  }\n\n  salesFormatter = new Intl.NumberFormat('us-EN', {\n    style: 'currency',\n    currency: 'USD'\n  })\n\n  funFormatter = new Intl.NumberFormat('us-EN')\n\n  actFormat = (act) => {\n    if (act < 30) {\n      const day = (act === 1) ? 'day' : 'days'\n      return `${act} ${day}`\n\n    } else if (act < 360) {\n      const monthNum = Math.floor(act / 30)\n      const month = (monthNum === 1) ? 'month' : 'months'\n      const dayNum = act % 30\n      if (dayNum === 0) {\n        return `${monthNum} ${month}`\n\n      } else if (dayNum === 1) {\n        return `${monthNum} ${month}, 1 day`\n\n      } else {\n        return `${monthNum} ${month}, ${dayNum} days`\n      }\n\n    } else {\n      const i = Math.floor(act / 30)\n      const yearNum = Math.floor(i / 12)\n      const year = (yearNum === 1) ? 'year' : 'years'\n      const monthNum = i % 12\n      if (monthNum === 0) {\n        return `${yearNum} ${year}`\n\n      } else if (monthNum === 1) {\n        return `${yearNum} ${year}, 1 month`\n\n      } else {\n        return `${yearNum} ${year}, ${monthNum} months`\n      }\n    }\n  }\n\n  networkId = (name) => {\n    switch (name) {\n      case 'kovan':\n        return 42\n      case 'rinkeby':\n        return 4\n      default:\n        return null\n    }\n  }\n\n  web3HttpUrl = (name) => {\n    switch (name) {\n      case 'kovan':\n        return 'https://kovan.infura.io/ipN7Rvj4j0lzprCXMbql'\n      case 'rinkeby':\n        return 'https://rinkeby.infura.io/ipN7Rvj4j0lzprCXMbql'\n      default:\n        return null\n    }\n  }\n\n  componentDidMount() {\n    const { tokenId, networkName } = this.props.match.params\n    const networkId = this.networkId(networkName)\n    const Web3 = require('web3')\n    const web3 = new Web3(new Web3.providers.HttpProvider(this.web3HttpUrl(networkName)))\n    const { SixPillars } = ContractData\n    const sixPillars = new web3.eth.Contract(SixPillars.abi, SixPillars.addresses[networkId])\n\n    if (Number.isNaN(parseInt(tokenId, 16))) {\n      this.setState({isNotFound: true})\n      return\n    }\n\n    let owner, creator\n    sixPillars.methods.ownerOf(tokenId).call()\n      .then((result) => {\n        owner = result\n        return sixPillars.methods.creator(tokenId).call()\n      })\n      .then((result) => {\n        creator = result\n        return sixPillars.methods.inscription(tokenId).call()\n      })\n      .then((result) => {\n        const bn = new web3.utils.BN(result)\n        const inscription = (\"0000000000000000000000000000000000000000000000000000000000000000\" + bn.toString(16)).slice(-64)\n        const model = TokenModel.decode(tokenId, owner, creator, inscription, ContractData.BandStar.addresses[networkId])\n        if (model != null) {\n          this.setState({tokenModel: model})\n        } else {\n          this.setState({isNotFound: true})\n        }\n      })\n  }\n\n  render() {\n    const { tokenModel, isNotFound } = this.state\n    return (\n      <div>\n        <h1>Token Detail</h1>\n        <div>{this.props.match.params.tokenId}</div>\n        {\n          (isNotFound === true) ? (\n            <div>token not found</div>\n\n          ) : ((tokenModel !== null) && tokenModel.isAlreadyMixed) ? (\n            <div>token is already used.</div>\n\n          ) : (tokenModel !== null) ? (\n            <React.Fragment>\n              <div><TokenIcon tokenModel={tokenModel} style={{height: '200px'}} /></div>\n              <div><TokenTypeChip tokenType={tokenModel.tokenType} /></div>\n              {\n                (tokenModel.tokenType === TokenType.redJewel) ? (\n                  <div>Power : {tokenModel.power}</div>\n\n                ) : (tokenModel.tokenType === TokenType.blueJewel) ? (\n                  <div>Speed : {tokenModel.speed}</div>\n\n                ) : (tokenModel.tokenType === TokenType.greenJewel) ? (\n                  <div>Vitality : {tokenModel.vitality}</div>\n\n                ) : (tokenModel.tokenType === TokenType.yellowJewel) ? (\n                  <div>Intellect : {tokenModel.intellect}</div>\n\n                ) : (\n                  <React.Fragment>\n                    <div>FullLength : {tokenModel.fullLength / 1000} m</div>\n                    <div>BodyWeight : {tokenModel.bodyWeight / 1000} t</div>\n                    <div>Power : {tokenModel.power}</div>\n                    <div>Speed : {tokenModel.speed}</div>\n                    <div>Vitality : {tokenModel.vitality}</div>\n                    <div>Intellect : {tokenModel.intellect}</div>\n                  </React.Fragment>\n                )\n              }\n            </React.Fragment>\n\n          ) : (\n            <Loading />\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default ShareTokenDetail\n","import React from 'react'\nimport ValidateWeb3Injector from '../../injectors/ValidateWeb3Injector'\nimport TokenType from '../../enums/TokenType'\nimport TokenModel from '../../models/TokenModel'\nimport TokenIcon from '../../components/TokenIcon'\nimport TokenTypeChip from '../../components/TokenTypeChip'\nimport Loading from '../../components/Loading'\nimport ContractData from '../../enums/ContractData'\n\nclass TokenDetail extends React.Component {\n  state = {\n    tokenModel: null,\n    isNotFound: false,\n  }\n\n  salesFormatter = new Intl.NumberFormat('us-EN', {\n    style: 'currency',\n    currency: 'USD'\n  })\n\n  funFormatter = new Intl.NumberFormat('us-EN')\n\n  actFormat = (act) => {\n    if (act < 30) {\n      const day = (act === 1) ? 'day' : 'days'\n      return `${act} ${day}`\n\n    } else if (act < 360) {\n      const monthNum = Math.floor(act / 30)\n      const month = (monthNum === 1) ? 'month' : 'months'\n      const dayNum = act % 30\n      if (dayNum === 0) {\n        return `${monthNum} ${month}`\n\n      } else if (dayNum === 1) {\n        return `${monthNum} ${month}, 1 day`\n\n      } else {\n        return `${monthNum} ${month}, ${dayNum} days`\n      }\n\n    } else {\n      const i = Math.floor(act / 30)\n      const yearNum = Math.floor(i / 12)\n      const year = (yearNum === 1) ? 'year' : 'years'\n      const monthNum = i % 12\n      if (monthNum === 0) {\n        return `${yearNum} ${year}`\n\n      } else if (monthNum === 1) {\n        return `${yearNum} ${year}, 1 month`\n\n      } else {\n        return `${yearNum} ${year}, ${monthNum} months`\n      }\n    }\n  }\n\n  networkName = (networkId) => {\n    switch (networkId) {\n      case 4:\n        return 'rinkeby'\n      case 42:\n        return 'kovan'\n      default:\n        return null\n    }\n  }\n\n  componentDidMount() {\n    const { networkId, currentAddress } = this.props\n    const { tokenId } = this.props.match.params\n    const { SixPillars } = ContractData\n    const sixPillars = new this.props.web3.eth.Contract(SixPillars.abi, SixPillars.addresses[networkId])\n\n    if (Number.isNaN(parseInt(tokenId, 16))) {\n      this.setState({isNotFound: true})\n      return\n    }\n\n    let owner, creator\n    sixPillars.methods.ownerOf(tokenId).call({from: currentAddress})\n      .then((result) => {\n        owner = result\n        return sixPillars.methods.creator(tokenId).call({from: currentAddress})\n      })\n      .then((result) => {\n        creator = result\n        return sixPillars.methods.inscription(tokenId).call({from: currentAddress})\n      })\n      .then((result) => {\n        const bn = new this.props.web3.utils.BN(result)\n        const inscription = (\"0000000000000000000000000000000000000000000000000000000000000000\" + bn.toString(16)).slice(-64)\n        const model = TokenModel.decode(tokenId, owner, creator, inscription, ContractData.Dragon.addresses[networkId])\n        if (model != null) {\n          model.alreadyDisplay()\n          this.setState({tokenModel: model})\n        } else {\n          this.setState({isNotFound: true})\n        }\n      })\n  }\n\n  render() {\n    const { tokenModel, isNotFound } = this.state\n    const shareUrl = `${window.location.origin}/llllll-sample-dragons/${this.networkName(this.props.networkId)}/tokens/${this.props.match.params.tokenId}`\n    return (\n      <div>\n        <h1>Token Detail</h1>\n        <div>{this.props.match.params.tokenId}</div>\n        {\n          (isNotFound === true) ? (\n            <div>token not found</div>\n\n          ) : ((tokenModel !== null) && tokenModel.isAlreadyMixed) ? (\n            <div>token is already used.</div>\n\n          ) : (tokenModel !== null) ? (\n            <React.Fragment>\n              <div><TokenIcon tokenModel={tokenModel} style={{height: '200px'}} /></div>\n              <div><TokenTypeChip tokenModel={tokenModel} /></div>\n              {\n                (tokenModel.tokenType === TokenType.redJewel) ? (\n                  <div>Power : {tokenModel.power}</div>\n\n                ) : (tokenModel.tokenType === TokenType.blueJewel) ? (\n                  <div>Speed : {tokenModel.speed}</div>\n\n                ) : (tokenModel.tokenType === TokenType.greenJewel) ? (\n                  <div>Vitality : {tokenModel.vitality}</div>\n\n                ) : (tokenModel.tokenType === TokenType.yellowJewel) ? (\n                  <div>Intellect : {tokenModel.intellect}</div>\n\n                ) : (\n                  <React.Fragment>\n                    <div>FullLength : {tokenModel.fullLength / 1000} m</div>\n                    <div>BodyWeight : {tokenModel.bodyWeight / 1000} t</div>\n                    <div>Power : {tokenModel.power}</div>\n                    <div>Speed : {tokenModel.speed}</div>\n                    <div>Vitality : {tokenModel.vitality}</div>\n                    <div>Intellect : {tokenModel.intellect}</div>\n                  </React.Fragment>\n                )\n              }\n              <div style={{marginTop: '30px'}}>\n                Share URL\n                <br />\n                <a href={shareUrl} alt='share token url'>{shareUrl}</a>\n              </div>\n            </React.Fragment>\n\n          ) : (\n            <Loading />\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default ValidateWeb3Injector(TokenDetail)\n","import React from 'react'\nimport Chip from '@material-ui/core/Chip'\nimport red from '@material-ui/core/colors/red'\n\nexport default () => (\n  <Chip label='New!' style={{color: red['500'], backgroundColor: red['50']}} />\n)\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport CheckBox from '@material-ui/icons/CheckBox'\nimport CheckBoxOutlineBlank from '@material-ui/icons/CheckBoxOutlineBlank'\nimport teal from '@material-ui/core/colors/teal'\nimport grey from '@material-ui/core/colors/grey'\nimport TokenType from '../../enums/TokenType'\nimport TokenIcon from '../TokenIcon'\nimport TokenTypeChip from '../TokenTypeChip'\nimport NewChip from '../NewChip'\nimport Loading from '../Loading'\n\nclass TokenCard extends React.Component {\n  handleClick = () => {\n    const {tokenModel, onClick} = this.props\n    onClick(tokenModel)\n  }\n\n  render() {\n    const {tokenModel, isMixedMode, isSelected} = this.props\n    let cardStyle = {\n      width: '100%',\n    }\n    if (isMixedMode) {\n      if (isSelected) {\n        cardStyle.backgroundColor = teal['100']\n\n      } else if (tokenModel.isAlreadyMixed) {\n        cardStyle.backgroundColor = grey['500']\n      }\n    }\n    return (\n      <Card onClick={this.handleClick}>\n        <CardActionArea style={cardStyle}>\n          {\n            (tokenModel == null) ? (\n              <CardContent>\n                <div style={{float: 'left', height: '106px', marginBottom: '16px'}}>\n                  <Loading />\n                </div>\n              </CardContent>\n\n            ) : (\n              <CardContent>\n                <div style={{float: 'left', width: '106px', height: '106px', marginBottom: '16px'}}>\n                  <TokenIcon tokenModel={tokenModel} style={{width: 'auto', height: 'auto', maxWidth: '100%', maxHeight: '100%'}} />\n                </div>\n                <div style={{float: 'left'}}>\n                  <ul style={{listStyle: 'none'}}>\n                    <li>\n                      {\n                        !tokenModel.isAlreadyDisplay && (\n                          <NewChip />\n                        )\n                      }\n                      <TokenTypeChip tokenModel={tokenModel} />\n                    </li>\n                    {\n                      (tokenModel.tokenType === TokenType.redJewel) ? (\n                        <li>Power : {tokenModel.power}</li>\n\n                      ) : (tokenModel.tokenType === TokenType.blueJewel) ? (\n                        <li>Speed : {tokenModel.speed}</li>\n\n                      ) : (tokenModel.tokenType === TokenType.greenJewel) ? (\n                        <li>Vitality : {tokenModel.vitality}</li>\n\n                      ) : (tokenModel.tokenType === TokenType.yellowJewel) ? (\n                        <li>Intellect : {tokenModel.intellect}</li>\n\n                      ) : (\n                        <React.Fragment>\n                          <li>Power : {tokenModel.power}</li>\n                          <li>Speed : {tokenModel.speed}</li>\n                          <li>Vitality : {tokenModel.vitality}</li>\n                          <li>Intellect : {tokenModel.intellect}</li>\n                        </React.Fragment>\n                      )\n                    }\n                  </ul>\n                </div>\n                {\n                  isMixedMode && !tokenModel.isAlreadyMixed && (\n                    <div style={{float: 'right'}}>\n                      { isSelected ? <CheckBox /> : <CheckBoxOutlineBlank /> }\n                    </div>\n                  )\n                }\n              </CardContent>\n            )\n          }\n        </CardActionArea>\n      </Card>\n    )\n  }\n}\n\nexport default TokenCard\n","import React from 'react'\nimport { withRouter } from 'react-router'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport ValidateWeb3Injector from '../../injectors/ValidateWeb3Injector'\nimport TokenModel from '../../models/TokenModel'\nimport TokenCard from '../../components/TokenCard'\nimport Loading from '../../components/Loading'\nimport ContractData from '../../enums/ContractData'\n\nconst LIST_ITEM_ONCE = 8\n\nclass MyPage extends React.Component {\n  state = {\n    tokenBalance: null,\n    isLoadingNextToken: false,\n    isCanMore: false,\n    tokenModels: [],\n    isMixedMode: false,\n    selectedTokenIds: [],\n    isCanSubmitMixed: false,\n  }\n\n  updateTokenId = (nextIndex, remainCount) => {\n    if (nextIndex < 0) {\n      this.setState({isLoadingNextToken: false})\n      return null\n\n    } else if (remainCount <= 0) {\n      this.setState({isLoadingNextToken: false, isCanMore: true})\n      return null\n    }\n    const { networkId, currentAddress } = this.props\n    const { SixPillars } = ContractData\n    const sixPillars = new this.props.web3.eth.Contract(SixPillars.abi, SixPillars.addresses[networkId])\n    let id, creator\n    sixPillars.methods.tokenOfOwnerByIndex(currentAddress, nextIndex).call({from: currentAddress})\n      .then((result) => {\n        const bn = new this.props.web3.utils.BN(result)\n        id = (\"0000000000000000000000000000000000000000000000000000000000000000\" + bn.toString(16)).slice(-64)\n        if (TokenModel.isAlreadyMixed(id)) {\n          throw new Error(`token ${id} is already mixed.`)\n        } else {\n          return sixPillars.methods.creator(`0x${id}`).call({from: currentAddress})\n        }\n      })\n      .then((result) => {\n        creator = result\n        return sixPillars.methods.inscription(`0x${id}`).call({from: currentAddress})\n      })\n      .then((result) => {\n        const bn = new this.props.web3.utils.BN(result)\n        const inscription = (\"0000000000000000000000000000000000000000000000000000000000000000\" + bn.toString(16)).slice(-64)\n        const model = TokenModel.decode(id, currentAddress, creator, inscription, ContractData.Dragon.addresses[networkId])\n        this.setState({tokenModels: this.state.tokenModels.concat(model)})\n        return this.updateTokenId(nextIndex - 1, remainCount - 1)\n      })\n      .catch((error) => {\n        this.updateTokenId(nextIndex - 1, remainCount)\n      })\n  }\n\n  handleMintClick = () => {\n    const tokenModel = TokenModel.mint()\n    const inscription = tokenModel.encode()\n    this.props.mintToken && this.props.mintToken(inscription)\n  }\n\n  handleTokenClick = (tokenModel) => {\n    const { tokenModels, isMixedMode, selectedTokenIds } = this.state\n    if (isMixedMode) {\n      if (0 <= selectedTokenIds.indexOf(tokenModel.id)) {\n        this.setState({\n          selectedTokenIds: selectedTokenIds.filter((tokenId) => { return tokenId !== tokenModel.id }),\n        })\n\n      } else {\n        const tokenIds = selectedTokenIds.concat(tokenModel.id)\n        const dragonTokenModels = tokenModels.filter((model) => 0 <= tokenIds.indexOf(model.id)).filter((model) => model.isDragon())\n        this.setState({\n          selectedTokenIds: tokenIds,\n          isCanSubmitMixed: (2 <= tokenIds.length) && (0 < dragonTokenModels.length),\n        })\n      }\n\n    } else {\n      this.props.history.push(`/tokens/${tokenModel.id}`)\n    }\n  }\n\n  handleMoreClick = () => {\n    const { tokenBalance, tokenModels } = this.state\n    this.setState({\n      isLoadingNextToken: true,\n      isCanMore: false,\n    })\n    this.updateTokenId(tokenBalance - tokenModels.length - 1, LIST_ITEM_ONCE)\n  }\n\n  handleEditMixedClick = () => {\n    this.setState({\n      isMixedMode: !this.state.isMixedMode,\n      selectedTokenIds: [],\n      isCanSubmitMixed: false,\n    })\n  }\n\n  handleSubmitMixedClick = () => {\n    const { tokenModels, selectedTokenIds } = this.state\n    const mixedTokenModels = tokenModels.filter((model) => 0 <= selectedTokenIds.indexOf(model.id))\n    const bandToken = TokenModel.mixedMint(mixedTokenModels)\n    const inscription = bandToken.encode()\n    this.props.mintToken && this.props.mintToken(inscription, () => {\n      mixedTokenModels.forEach((tokenModel) => { tokenModel.alreadyMixed() })\n    })\n  }\n\n  componentDidMount() {\n    const { networkId, currentAddress } = this.props\n    const { SixPillars } = ContractData\n    const sixPillars = new this.props.web3.eth.Contract(SixPillars.abi, SixPillars.addresses[networkId])\n    sixPillars.methods.balanceOf(currentAddress).call({from: currentAddress})\n      .then((result) => {\n        const balance = parseInt(result)\n        this.setState({\n          tokenBalance: balance,\n          isLoadingNextToken: true,\n        })\n        this.updateTokenId(balance - 1, LIST_ITEM_ONCE)\n      })\n  }\n\n  render() {\n    const { tokenBalance, isLoadingNextToken, isCanMore, tokenModels, isMixedMode, selectedTokenIds, isCanSubmitMixed } = this.state\n    const displayCount = isLoadingNextToken ? tokenModels.length + 1 : tokenModels.length\n    return (\n      <div>\n        <h1>My Page</h1>\n        <Grid container>\n          <Grid item xs={12} md={4} lg={3} key='mint'>\n            <Button variant=\"outlined\" onClick={this.handleMintClick}>\n              Create Dragon Token\n            </Button>\n          </Grid>\n          <Grid item xs={12} md={4} lg={3} key='editmixed'>\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleEditMixedClick}>\n              { isMixedMode ? 'Cancel Dragon Mix' : 'Start Dragon Mix' }\n            </Button>\n          </Grid>\n          {\n            isMixedMode && isCanSubmitMixed && (\n              <Grid item xs={12} md={4} lg={3} key='submitmixed'>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={this.handleSubmitMixedClick}>\n                  Submit Dragon Mix\n                </Button>\n              </Grid>\n            )\n          }\n        </Grid>\n        {\n          (tokenBalance == null) ? (\n            <Loading />\n\n          ) : (0 < displayCount) ? (\n            <Grid container>\n              {\n                Array(displayCount).fill(0).map((_, i) => {\n                  if (i < tokenModels.length) {\n                    return (\n                      <Grid item xs={12} md={6} lg={4} key={i}>\n                        <TokenCard tokenModel={tokenModels[i]} isMixedMode={isMixedMode} isSelected={0 <= selectedTokenIds.indexOf(tokenModels[i].id)} onClick={this.handleTokenClick} />\n                      </Grid>\n                    )\n\n                  } else {\n                    return (\n                      <Grid item xs={12} md={6} lg={4} key={i}>\n                        <TokenCard />\n                      </Grid>\n                    )\n                  }\n                })\n              }\n              {\n                isCanMore && (\n                  <Grid item xs={12} md={6} lg={4} key={displayCount}>\n                    <Card onClick={this.handleMoreClick}>\n                      <CardActionArea style={{width: '100%'}}>\n                        <CardContent>\n                          <div style={{height: '106px', padding: '16px'}}>\n                            { 'More...' }\n                          </div>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grid>\n                )\n              }\n            </Grid>\n\n          ) : (\n            <p>{\"you don't have token.\"}</p>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ValidateWeb3Injector(MyPage))\n","import React from 'react'\nimport Web3Context from '../../contexts/Web3Context'\n\nconst Web3Injector = (WrappedComponent) => (\n  class extends React.Component {\n    render() {\n      return (\n        <Web3Context.Consumer>\n          {\n            (providerProps) => {\n              const props = {\n                ...this.props,\n                ...providerProps,\n              }\n              return <WrappedComponent {...props} />\n            }\n          }\n        </Web3Context.Consumer>\n      )\n    }\n  }\n)\n\nexport default Web3Injector\n","export default {\n  4: 'Rinkeby',\n  42: 'Kovan',\n  5777: 'Local',\n}\n","import React from 'react'\nimport { withRouter } from 'react-router'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Web3Injector from '../../injectors/Web3Injector'\nimport Web3TransactionType from '../../enums/Web3TransactionType'\nimport NetworkName from '../../enums/NetworkName'\n\nclass Header extends React.Component {\n  state = {\n    isProgress: false,\n    isOpen: false,\n    snackMessage: null,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { web3Transaction } = this.props\n    if (web3Transaction !== prevProps.web3Transaction) {\n      switch (web3Transaction) {\n        case Web3TransactionType.pending:\n          this.setState({\n            isProgress: true,\n            isOpen: false,\n          })\n          break\n        case Web3TransactionType.success:\n          this.setState({\n            isProgress: false,\n            isOpen: true,\n            snackMessage: \"success!\",\n          })\n          setTimeout(() => {\n            window.location.reload()\n          }, 1500)\n          break\n        case Web3TransactionType.cancel:\n          this.setState({\n            isProgress: false,\n            isOpen: true,\n            snackMessage: \"cancel transaction.\",\n          })\n          break\n        default:\n          this.setState({\n            isProgress: false,\n            isOpen: false,\n          })\n          break\n      }\n    }\n  }\n\n  handleSnackClose = () => {\n    this.setState({\n      isOpen: false,\n    })\n  }\n\n  handleLogoClick = () => {\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { networkId } = this.props\n    const { isProgress, isOpen, snackMessage } = this.state\n    return (\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar>\n          <Typography variant=\"h4\" color=\"inherit\" style={{flexGrow: 1}} onClick={this.handleLogoClick}>\n            Dragon\n          </Typography>\n          {\n            isProgress && <CircularProgress color=\"primary\" size={30} />\n          }\n          {\n            networkId && NetworkName[networkId] && (\n              <Typography variant=\"h6\" color=\"inherit\">\n                {NetworkName[networkId]}\n              </Typography>\n            )\n          }\n        </Toolbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={isOpen}\n          autoHideDuration={3000}\n          onClose={this.handleSnackClose}\n          message={snackMessage}\n        />\n      </AppBar>\n    )\n  }\n}\n\nexport default withRouter(Web3Injector(Header))\n","import React from 'react'\n\nexport default () => (\n  <div>\n    404 Not Found\n  </div>\n)\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport Web3Provider from './providers/Web3Provider'\nimport GithubPagesRedirectProvider from './providers/GithubPagesRedirectProvider'\nimport ShareTokenDetail from './views/ShareTokenDetail'\nimport TokenDetail from './views/TokenDetail'\nimport MyPage from './views/MyPage'\nimport Header from './components/Header'\nimport NotFound from './components/NotFound'\n\nclass App extends Component {\n  render() {\n    return (\n      <Web3Provider>\n        <BrowserRouter basename={'/llllll-sample-dragons'}>\n          <GithubPagesRedirectProvider>\n            <React.Fragment>\n              <Header />\n              <Switch>\n                <Route exact path=\"/:networkName/tokens/:tokenId\" component={ShareTokenDetail} />\n                <Route exact path=\"/tokens/:tokenId\" component={TokenDetail} />\n                <Route exact path=\"/\" component={MyPage} />\n                <Route component={NotFound} />\n              </Switch>\n            </React.Fragment>\n          </GithubPagesRedirectProvider>\n        </BrowserRouter>\n      </Web3Provider>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}